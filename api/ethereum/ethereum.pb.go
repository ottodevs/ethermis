// Code generated by protoc-gen-go.
// source: api/ethereum/ethereum.proto
// DO NOT EDIT!

/*
Package ethereum is a generated protocol buffer package.

It is generated from these files:
	api/ethereum/ethereum.proto

It has these top-level messages:
	CompiledContract
	DeploymentInfo
*/
package ethereum

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CompiledContract struct {
	Abi  string `protobuf:"bytes,1,opt,name=abi" json:"abi,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
}

func (m *CompiledContract) Reset()                    { *m = CompiledContract{} }
func (m *CompiledContract) String() string            { return proto.CompactTextString(m) }
func (*CompiledContract) ProtoMessage()               {}
func (*CompiledContract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CompiledContract) GetAbi() string {
	if m != nil {
		return m.Abi
	}
	return ""
}

func (m *CompiledContract) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type DeploymentInfo struct {
	DeployedAddress string `protobuf:"bytes,1,opt,name=deployed_address,json=deployedAddress" json:"deployed_address,omitempty"`
	TransactionId   string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
}

func (m *DeploymentInfo) Reset()                    { *m = DeploymentInfo{} }
func (m *DeploymentInfo) String() string            { return proto.CompactTextString(m) }
func (*DeploymentInfo) ProtoMessage()               {}
func (*DeploymentInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DeploymentInfo) GetDeployedAddress() string {
	if m != nil {
		return m.DeployedAddress
	}
	return ""
}

func (m *DeploymentInfo) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func init() {
	proto.RegisterType((*CompiledContract)(nil), "ethereum.CompiledContract")
	proto.RegisterType((*DeploymentInfo)(nil), "ethereum.DeploymentInfo")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Ethereum service

type EthereumClient interface {
	Deploy(ctx context.Context, in *CompiledContract, opts ...grpc.CallOption) (*DeploymentInfo, error)
}

type ethereumClient struct {
	cc *grpc.ClientConn
}

func NewEthereumClient(cc *grpc.ClientConn) EthereumClient {
	return &ethereumClient{cc}
}

func (c *ethereumClient) Deploy(ctx context.Context, in *CompiledContract, opts ...grpc.CallOption) (*DeploymentInfo, error) {
	out := new(DeploymentInfo)
	err := grpc.Invoke(ctx, "/ethereum.Ethereum/Deploy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Ethereum service

type EthereumServer interface {
	Deploy(context.Context, *CompiledContract) (*DeploymentInfo, error)
}

func RegisterEthereumServer(s *grpc.Server, srv EthereumServer) {
	s.RegisterService(&_Ethereum_serviceDesc, srv)
}

func _Ethereum_Deploy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompiledContract)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EthereumServer).Deploy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.Ethereum/Deploy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EthereumServer).Deploy(ctx, req.(*CompiledContract))
	}
	return interceptor(ctx, in, info, handler)
}

var _Ethereum_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ethereum.Ethereum",
	HandlerType: (*EthereumServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Deploy",
			Handler:    _Ethereum_Deploy_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/ethereum/ethereum.proto",
}

func init() { proto.RegisterFile("api/ethereum/ethereum.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x92, 0x4e, 0x2c, 0xc8, 0xd4,
	0x4f, 0x2d, 0xc9, 0x48, 0x2d, 0x4a, 0x2d, 0xcd, 0x85, 0x33, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2,
	0x85, 0x38, 0x60, 0x7c, 0x29, 0x99, 0xf4, 0xfc, 0xfc, 0xf4, 0x9c, 0x54, 0x7d, 0x90, 0xea, 0xc4,
	0xbc, 0xbc, 0xfc, 0x92, 0xc4, 0x92, 0xcc, 0xfc, 0xbc, 0x62, 0x88, 0x3a, 0x25, 0x0b, 0x2e, 0x01,
	0xe7, 0xfc, 0xdc, 0x82, 0xcc, 0x9c, 0xd4, 0x14, 0xe7, 0xfc, 0xbc, 0x92, 0xa2, 0xc4, 0xe4, 0x12,
	0x21, 0x01, 0x2e, 0xe6, 0xc4, 0xa4, 0x4c, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x10, 0x53,
	0x48, 0x88, 0x8b, 0x25, 0x39, 0x3f, 0x25, 0x55, 0x82, 0x09, 0x2c, 0x04, 0x66, 0x2b, 0x25, 0x71,
	0xf1, 0xb9, 0xa4, 0x16, 0xe4, 0xe4, 0x57, 0xe6, 0xa6, 0xe6, 0x95, 0x78, 0xe6, 0xa5, 0xe5, 0x0b,
	0x69, 0x72, 0x09, 0xa4, 0x80, 0x45, 0x52, 0x53, 0xe2, 0x13, 0x53, 0x52, 0x8a, 0x52, 0x8b, 0x8b,
	0xa1, 0x86, 0xf0, 0xc3, 0xc4, 0x1d, 0x21, 0xc2, 0x42, 0xaa, 0x5c, 0x7c, 0x40, 0xbb, 0xf2, 0x8a,
	0x81, 0xd6, 0x01, 0x1d, 0x13, 0x9f, 0x99, 0x02, 0x35, 0x9a, 0x17, 0x49, 0xd4, 0x33, 0xc5, 0x28,
	0x8b, 0x8b, 0xc3, 0x15, 0xea, 0x0f, 0xa1, 0x38, 0x2e, 0x36, 0x88, 0x7d, 0x42, 0x52, 0x7a, 0x70,
	0xcf, 0xa2, 0xbb, 0x5d, 0x4a, 0x02, 0x21, 0x87, 0xea, 0x3a, 0x25, 0xb9, 0xa6, 0xcb, 0x4f, 0x26,
	0x33, 0x49, 0x28, 0x09, 0xeb, 0x97, 0x19, 0xea, 0x27, 0x43, 0xd5, 0xeb, 0x43, 0x1c, 0x66, 0xc5,
	0xa8, 0xe5, 0xc4, 0x15, 0x05, 0x0f, 0xb3, 0x24, 0x36, 0x70, 0xe0, 0x18, 0x03, 0x02, 0x00, 0x00,
	0xff, 0xff, 0x47, 0x6a, 0xbc, 0x40, 0x63, 0x01, 0x00, 0x00,
}
